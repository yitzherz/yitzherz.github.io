{"version":3,"sources":["Error.js","WeatherDetails.js","RecentSearch.js","App.js","reportWebVitals.js","index.js"],"names":["Error","error","setError","useEffect","errorMessage","setTimeout","clearTimeout","style","color","fontSize","WeatherDetails","props","weatherData","city","state","degrees","description","icon","className","Date","toLocaleTimeString","src","alt","RecentSearch","recentData","setNewZip","zip","onClick","App","useState","newZip","getWeather","setZip","theWeather","setTheWeather","recents","setRecents","e","a","preventDefault","currentZip","fetch","res","ok","json","cod","message","place","placeData","filtered","filter","recent","name","main","temp","toString","split","places","weather","onSubmit","value","placeholder","onChange","test","target","slice","onKeyDown","key","length","display","marginBottom","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7dbdadf.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nexport default function Error({ error, setError }) {\r\n    useEffect(() => {\r\n        const errorMessage = setTimeout(() => {\r\n            setError('');\r\n        }, 2500)\r\n        return () => {\r\n            clearTimeout(errorMessage);\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            {error && <div style={{ color: 'red', fontSize: '1.5em' }}>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\n\r\n\r\nexport default function WeatherDetails(props) {\r\n\r\n    const { city, state, degrees, description, icon } = props.weatherData;\r\n    \r\n    return (\r\n        <div className=\"weatherDiv\" >\r\n            <h2>{city}, {state} Weather </h2>\r\n            <div>As of {new Date().toLocaleTimeString()}</div>\r\n            <div style={{fontSize: '4em'}}>{degrees}</div>\r\n            <img src={icon} alt=\"pic unavailable\"></img>\r\n            <h3>{description}</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function RecentSearch({ recentData, setNewZip }) {\r\n    \r\n    const { zip, city, degrees } = recentData;\r\n\r\n    return (\r\n        <div\r\n            className=\"recentZip\"\r\n            onClick={() => setNewZip(zip)}\r\n        >\r\n            {city} {zip}   {degrees}\r\n        </div>  \r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Error from './Error';\nimport WeatherDetails from './WeatherDetails';\nimport RecentSearch from './RecentSearch';\n\nexport default function App() {\n\n  const [newZip, setNewZip] = useState('');\n  useEffect(() => {\n    getWeather();\n  }, [newZip])\n\n  const [zip, setZip] = useState('');\n  const [theWeather, setTheWeather] = useState(null);\n  const [error, setError] = useState('');\n  const [recents, setRecents] = useState('');\n\n  const setZipCode = e => {\n    // check if value is a number\n    const re = /^\\d$/;\n    if (re.test(e.target.value.slice(-1))) {\n      setZip(e.target.value)\n    }\n  }\n  // enables backspacing of first number in input\n  const checkDelete = e => {\n    if (e.key === \"Backspace\" && zip.length === 1) {\n      setZip('')\n    }\n  }\n\n  const getWeather = async (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    const currentZip = newZip || zip;\n    if (currentZip < 5) {\n      return\n    }\n\n    setTheWeather(null)\n    setZip('');\n    setNewZip('');\n    const apiKey = 'cb7c71219cf09eb0bb414b932669be97';\n    const units = 'imperial';\n\n    try {\n      const res = await fetch(`http://api.openweathermap.org/data/2.5/weather?appid=${apiKey}&zip=${currentZip}&units=${units}`)\n\n      if (!res.ok) {\n        setError('Something went wrong');\n      }\n      const weatherData = await res.json();\n\n      if (weatherData.cod === '404') {\n        setError(weatherData.message);\n        return\n      }\n\n      const place = await fetch(`https://api.zippopotam.us/us/${currentZip}`);\n      const placeData = await place.json();\n      if (recents) {\n        const filtered = recents.filter(recent => recent.zip !== currentZip);\n        setRecents([...filtered, { zip: currentZip, city: weatherData.name, degrees: `${weatherData.main.temp.toString().split('.')[0]}°` }]);\n      } else {\n        setRecents([{ zip: currentZip, city: weatherData.name, degrees: `${weatherData.main.temp.toString().split('.')[0]}°` }])\n      }\n      setTheWeather({\n        city: weatherData.name,\n        state: placeData.places[0].state,\n        icon: `http://openweathermap.org/img/wn/${weatherData.weather[0].icon}.png`,\n        degrees: `${weatherData.main.temp.toString().split('.')[0]}°`,\n        description: `${weatherData.weather[0].description}`\n      });\n    } catch {\n      setError('Something went wrong');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>React Weather App</h1>\n      <p className=\"app-description\">This Weather App uses Html, CSS, Javascript and the REACT framework\n       with multiple API's to get the data and has the ability to view recent searches</p>\n      <form onSubmit={getWeather}>\n        <input\n          className=\"search-input\"\n          value={zip}\n          placeholder=\"Search Zip Code\"\n          onChange={setZipCode}\n          onKeyDown={checkDelete}\n        />\n      </form>\n      {theWeather && <WeatherDetails weatherData={theWeather} />}\n      {error && <Error error={error} setError={setError} />}\n      <div className=\"recentsDiv\" >\n        {recents && <span style={{ color: '#0926f9', fontSize: '1.5em', display: 'inline-block', marginBottom: '.3em' }}>\n          Recent Searches</span>}\n        {recents && recents.map((recent) => <RecentSearch key={recent.zip} recentData={recent} setNewZip={setNewZip} />)}\n      </div>\n    </div>\n  );\n\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}